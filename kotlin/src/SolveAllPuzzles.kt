import challenges.*
import java.io.File
import kotlin.system.measureTimeMillis


private val puzzles = mutableListOf<Puzzle>(
        D1ExpenseReport(), D2Passwords(), D3Slopes(), D4Passports(),
        D5Boarding(), D6CustomForms(), D7Bags(), D8Halting(), D9Encoding(),
        D10Adapters(), D11Seats(), D12Ferrying(), D13Shuttle(), D14Masking(),
        D15MemoryGame(), D16Tickets(), D17ConwayCubes()
)

fun main() {

    val file = File("README.md")
    val sb = StringBuilder()

    sb.append("# AoC 2020\n\n")
    sb.append("This repository contains my solution for 2020s [Advent of Code challenges!](https://adventofcode.com/2020)\n")
    sb.append("I will be participating in `Kotlin` ([source-files](https://github.com/KristofAchten/AoC2020/tree/master/kotlin/src)) " +
            "and `Angular/typescript` ([source-files](https://github.com/KristofAchten/AoC2020/tree/master/angular/aoc/src/app)).\n\n")
    sb.append("The output for the challenges (given my personalized input files) is automatically generated " +
            "and shown below. Even though it is not important: these are the solutions as generated by my Kotlin implementations.\n\n")
    sb.append("# Solutions\n")

    val totalExecTime = measureTimeMillis {
        for (p in puzzles) {
            var result = ""
            val execTime = measureTimeMillis {
                result = p.solve()
            }
            sb.append("- " + result + " *(execution took ${execTime}ms)*\n")
            println(result)
        }
    }
    sb.append("\n\n Total execution time: ${totalExecTime}ms")
    file.writeText(sb.toString())
}